name: PizzaDao Backend API Deployment - Prod

on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: .

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest      
    env:
      NODE_VERSION: "22.x"
      PROJECT_NAME: "üçï PizzaDao Backend API - Prod"
      DEPLOY_PATH: "/root/projects/pizzadao/backend/prod/"
      PROJECT_DIR: "api"
      SERVICE_NAME: "pizzadao_api_prod.service"
      RUN_FIXTURES: "true"
    
    steps:
      - name: Notify Build Start
        run: |          
          curl -s -X POST https://api.telegram.org/bot${{ secrets.DEV_ACTIONS_BOT_TOKEN }}/sendMessage \
          -d chat_id="${{ secrets.DEV_ACTIONS_GROUP_ID }}" \
          -d text="
          ${{ env.PROJECT_NAME }} Build Started üöÄ
          üìÅ Repository: ${{ github.repository }}
          üë§ Initiator: ${{ github.actor }}
          üïí Timestamp: ${{ github.event.head_commit.timestamp}} 
          üìù Commit Message: ${{ github.event.head_commit.message }}"

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Build Environment
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 22
          nvm use 22
          npm install -g pnpm@latest
          pnpm install
          pnpm run build

      - name: Notify Build Complete
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.DEV_ACTIONS_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.DEV_ACTIONS_GROUP_ID }}" \
            -d text="
          ${{ env.PROJECT_NAME }} Build Complete üõ†
          üìÅ Repository: ${{ github.repository }}
          üë§ Initiator: ${{ github.actor }}
          üïí Timestamp: ${{ github.event.head_commit.timestamp }}
          üìù Commit Message: ${{ github.event.head_commit.message }}"

      - name: Create Deploy Path
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo mkdir -p ${{ env.DEPLOY_PATH }}${{ env.PROJECT_DIR }}
      
      - name: Copy Files to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "."
          target: "${{ env.DEPLOY_PATH }}${{ env.PROJECT_DIR }}"
          rm: true

      - name: Deploy Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}          
          script: | 
            cd ${{ env.DEPLOY_PATH }}${{ env.PROJECT_DIR }}

            sudo bash -c 'cat > "/etc/systemd/system/${{ env.SERVICE_NAME }}" <<- EOM
            [Unit]
            Description=${{ env.PROJECT_NAME }}
            After=network.target

            [Service]
            Type=simple
            Restart=always
            RestartSec=5s
            WorkingDirectory=${{ env.DEPLOY_PATH }}${{ env.PROJECT_DIR }}
            ExecStart=/bin/bash -c '\''source $HOME/.nvm/nvm.sh && exec node ${{ env.DEPLOY_PATH }}${{ env.PROJECT_DIR }}/dist/src/main.js'\''
            Environment=NODE_ENV=production
            Environment=PORT=3000
            Environment=NODE_VERSION=22.x
            Environment=HOME=/root
            Environment=NVM_DIR=/root/.nvm
            
            [Install]
            WantedBy=multi-user.target
            EOM'

            if [ ! -d "$HOME/.nvm" ]; then
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
              echo 'export NVM_DIR="$HOME/.nvm"' >> $HOME/.bashrc
              echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $HOME/.bashrc
            fi

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install 22 && nvm use 22 && nvm alias default 22
            npm install -g pnpm@latest && pnpm install
              NODE_ENV=production pnpm run migrate
            [[ "${{ env.RUN_FIXTURES }}" = "true" ]] && NODE_ENV=production pnpm run fixtures
            
            sudo systemctl daemon-reload
            sudo systemctl enable ${{ env.SERVICE_NAME }}
            sudo systemctl restart ${{ env.SERVICE_NAME }}

      - name: Notify Deploy Complete
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.DEV_ACTIONS_BOT_TOKEN }}/sendMessage \
            -d chat_id="${{ secrets.DEV_ACTIONS_GROUP_ID }}" \
            -d text="
          ${{ env.PROJECT_NAME }} Deploy Complete ‚úÖ
          üìÅ Repository: ${{ github.repository }}
          üë§ Initiator: ${{ github.actor }}
          üïí Timestamp: ${{ github.event.head_commit.timestamp }}
          üìù Commit Message: ${{ github.event.head_commit.message }}"
